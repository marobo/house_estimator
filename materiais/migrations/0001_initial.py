# Generated by Django 5.0.2 on 2025-05-02 03:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit', models.CharField(max_length=50)),
                ('component_type', models.CharField(choices=[('cable', 'Cable'), ('switch', 'Switch'), ('socket', 'Socket'), ('light', 'Light'), ('other', 'Other')], max_length=50)),
                ('default_quantity', models.IntegerField(default=1, help_text='Default quantity per room')),
            ],
        ),
        migrations.CreateModel(
            name='Plywood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('length', models.FloatField(help_text='Length in meters', validators=[django.core.validators.MinValueValidator(0)])),
                ('width', models.FloatField(help_text='Width in meters', validators=[django.core.validators.MinValueValidator(0)])),
                ('price_per_sheet', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('waste_percentage', models.FloatField(default=5, help_text='Waste percentage for cutting')),
            ],
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('length', models.FloatField(help_text='Length in centimeters', validators=[django.core.validators.MinValueValidator(0)])),
                ('width', models.FloatField(help_text='Width in centimeters', validators=[django.core.validators.MinValueValidator(0)])),
                ('pieces_per_box', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price_per_box', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('waste_percentage', models.FloatField(default=10, help_text='Waste percentage for cutting and breakage (0-100%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='ElectricalCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_length', models.FloatField(help_text='Room length in meters')),
                ('room_width', models.FloatField(help_text='Room width in meters')),
                ('room_quantity', models.IntegerField(default=1)),
                ('quantity', models.FloatField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculation_date', models.DateTimeField(auto_now_add=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materiais.electriccomponent')),
            ],
        ),
        migrations.CreateModel(
            name='PlywoodCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_length', models.FloatField(help_text='Room length in meters')),
                ('room_width', models.FloatField(help_text='Room width in meters')),
                ('room_quantity', models.IntegerField(default=1)),
                ('total_sheets', models.IntegerField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waste_percentage', models.FloatField()),
                ('calculation_date', models.DateTimeField(auto_now_add=True)),
                ('plywood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materiais.plywood')),
            ],
        ),
        migrations.CreateModel(
            name='TileCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_length', models.FloatField(help_text='Room length in meters')),
                ('room_width', models.FloatField(help_text='Room width in meters')),
                ('room_quantity', models.IntegerField(default=1)),
                ('total_boxes', models.FloatField()),
                ('total_pieces', models.IntegerField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waste_percentage', models.FloatField(help_text='Waste percentage for cutting and breakage (0-100%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('calculation_date', models.DateTimeField(auto_now_add=True)),
                ('tile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materiais.tile')),
            ],
        ),
    ]
